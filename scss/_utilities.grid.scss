// ----
// Sass (v3.4.12)
// Compass (v1.0.3)
// ----

// _settings.responsive.scss

// Create an array of named breakpoints and their conditions.
$breakpoints: (
  "xs" "screen and (min-width:" + $bp1 + ")",
  "sm" "screen and (min-width:" + $bp2 + ")",
  "md" "screen and (min-width:" + $bp3 + ")",
  "lg" "screen and (min-width:" + $bp4 + ")",
  "xl" "screen and (min-width:" + $bp5 + ")",
) !default;





// _tools.responsive.scss

// Using our breakpoint settings, allow us to quickly generate complete media
// queries from our aliases.
//
// .simple-usage {
//   padding: 1em;
//   @include media-query(xl) {
//     padding: 2em;
//   }
// }
@mixin media-query($mq) {

  $breakpoint-found: false;

  // Loop through the list of breakpoints we’ve provided in our settings file.
  @each $breakpoint in $breakpoints {

    // Grab the alias and the condition from their respective locations in
    // the list.
    $alias:     nth($breakpoint, 1);
    $condition: nth($breakpoint, 2);

    // If the media query we’ve specified has an alias and a condition...
    @if ($mq == $alias and $condition) {

      // ...tell the mixin that we’ve found it...
      $breakpoint-found: true;

      // ...and spit it out here.
      @media #{$condition} {
        @content;
      }

    }

  }

  // If the user specifies a non-exitent alias, send them a warning.
  @if ($breakpoint-found == false) {
    @warn "Oops! Breakpoint ‘#{$mq}’ does not exist."
  }

}





// _tools.widths.scss

// Do we want to use classes like `<div class="u-1/4">` instead of
// `<div class="u-1-of-4">`?
$widths-fractions: true !default;

// Depending on what we chose for `$widths-fractions`, create the relevant
// delimiter.
$delimiter: null;
@if ($widths-fractions == true) {
  $delimiter: \/;
} @else {
  $delimiter: -of-;
}

// A mixin to spit out our width classes. Pass in the columns we want the widths
// to have, and an optional suffix for responsive widths. E.g. to create thirds
// and quarters for a small breakpoint:
//
// @include widths(3 4, -sm);
@mixin widths($columns, $breakpoint: null) {

  // Loop through the number of columns for each denominator of our fractions.
  @each $denominator in $columns {

    // Begin creating a numberator for our fraction up until we hit the
    // denominator.
    @for $numerator from 1 through $denominator {

      // Build a class in the format `.u-3/4` or `.u-3-of-4`.
      .u-#{$numerator}#{$delimiter}#{$denominator}#{$breakpoint} {
        width: ($numerator / $denominator) * 100% !important;
      }

    }

  }

}






// _trumps.widths.scss

// By default we will create halves, thirds, quarters, and fifths.
$columns: (
  2,
  3,
  4,
  5
) !default;

// Loop through each of our column sizes and generate its width classes.
@each $column in $columns {
  @include widths($column);
}





// _trumps.widths-responsive.scss

// Loop over our breakpoints defined in _settings.responsive.scss
@each $breakpoint in $breakpoints {

  // Get the name of the breakpoint.
  $alias: nth($breakpoint, 1);

  @include media-query($alias) {

    // Loop through each of our column sizes and generate its responsive width
    // classes.
    @each $column in $columns {
      @include widths($column, -#{$alias});
    }

  }

}